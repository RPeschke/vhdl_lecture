-- XGEN: Autogenerated File

library IEEE;
library UNISIM;
  use IEEE.numeric_std.all;
  use IEEE.std_logic_1164.all;
  use UNISIM.VComponents.all;


package xgen_edgeDetection is 

  -------------------------------------------------------------------------
  ------- Start Psuedo Class edgeDetection -------------------------

  type edgeDetection is record 
    oldRX : std_logic; 
    oldRX1 : std_logic; 
    rx : std_logic; 
  end record;


  constant edgeDetection_null : edgeDetection:= (
    oldRX => '0',
    oldRX1 => '0',
    rx => '0'
  );


  type edgeDetection_a is array (natural range <>) of edgeDetection;

  -- empty procedure removed. name: 'push'
  procedure pull ( self : inout edgeDetection;  signal rx :  in  std_logic);
  function rising_edge (  self : edgeDetection) return boolean;
  function falling_edge (  self : edgeDetection) return boolean;
  ------- End Psuedo Class edgeDetection -------------------------
  -------------------------------------------------------------------------


end xgen_edgeDetection;


package body xgen_edgeDetection is

  -------------------------------------------------------------------------
  ------- Start Psuedo Class edgeDetection -------------------------
  -- empty procedure removed. name: 'push'
  procedure pull (  self : inout edgeDetection;  signal rx :  in  std_logic) is

  begin 


    -- Start Connecting

    self.rx := rx;

    -- End Connecting
    self.oldRX1 := self.oldRX;
    self.oldRX := self.rx;


  end procedure;

  function rising_edge (  self : edgeDetection) return boolean is

  begin 
    return (  not  ( self.oldRX1 = '1' )  and self.oldRX = '1');

  end function;

  function falling_edge (  self : edgeDetection) return boolean is

  begin 
    return ( self.oldRX1 = '1' and  not  ( self.oldRX = '1' ) );

  end function;

  ------- End Psuedo Class edgeDetection -------------------------
  -------------------------------------------------------------------------


end xgen_edgeDetection;